{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\GitHub\\\\react-routing-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    // \tstatus: 500\n    // });\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  }\n  return response;\n};\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","Await","defer","json","useLoaderData","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/lucas/Documents/GitHub/react-routing-project/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\r\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventsPage() {\r\n\tconst { events } = useLoaderData();\r\n\r\n\treturn (\r\n\t\t<Suspense>\r\n\t\t\t<Await resolve={events}>\r\n\t\t\t\t{loadedEvents => <EventsList events={loadedEvents} />}\r\n\t\t\t</Await>\r\n\t\t</Suspense>\r\n\t);\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nconst loadEvents = async () => {\r\n\tconst response = await fetch('http://localhost:8080/events');\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: 'Could not fetch events.' };\r\n\t\t// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n\t\t// \tstatus: 500\r\n\t\t// });\r\n\t\treturn json({ message: 'Could not fetch events.' }, { status: 500 });\r\n\t}\r\n\r\n\treturn response;\r\n};\r\n\r\nexport const loader = () => {\r\n\treturn defer({ events: loadEvents() });\r\n};\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGN,aAAa,EAAE;EAElC,oBACCG,OAAA,CAACF,QAAQ;IAAAM,QAAA,eACRJ,OAAA,CAACN,KAAK;MAACW,OAAO,EAAEF,MAAO;MAAAC,QAAA,EACrBE,YAAY,iBAAIN,OAAA,CAACP,UAAU;QAACU,MAAM,EAAEG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEb;AAACR,EAAA,CAVQD,UAAU;EAAA,QACCJ,aAAa;AAAA;AAAAc,EAAA,GADxBV,UAAU;AAYnB,eAAeA,UAAU;AAEzB,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA,OAAOnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EAEA,OAAOJ,QAAQ;AAChB,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAC3B,OAAOvB,KAAK,CAAC;IAAEQ,MAAM,EAAES,UAAU;EAAG,CAAC,CAAC;AACvC,CAAC;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}